// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test subcomponents compile 1`] = `
Store {
  "_docpaths": undefined,
  "_homepaths": undefined,
  "buildConfig": Object {
    "categories": Array [
      "author",
      "tags",
    ],
    "pages": Object {
      "author": Object {
        "basePath": "authors/",
      },
      "blog": Object {
        "basePath": "blogs/",
      },
      "page": Object {
        "basePath": "pages/",
      },
      "story": Object {
        "basePath": "docs/",
        "storyPaths": true,
        "tabs": Array [
          Object {
            "route": "page",
          },
          Object {
            "route": "test",
          },
        ],
      },
      "tags": Object {
        "basePath": "tags/",
      },
    },
    "stories": Array [
      "./*.stories.(js|jsx|tsx|mdx)",
    ],
  },
  "buildDocPaths": [Function],
  "buildHomePaths": [Function],
  "components": Object {
    "08a97b28475aff9eba8252eeffddeea5": Object {
      "from": "../../../../../examples/stories/src/components/PropTypesButton",
      "importedName": "Button",
      "imports": Object {
        "polished": Array [
          Object {
            "importedName": "lighten",
            "name": "lighten",
          },
        ],
        "prop-types": Array [
          Object {
            "importedName": "default",
            "name": "PropTypes",
          },
        ],
        "react": Array [
          Object {
            "importedName": "default",
            "name": "React",
          },
        ],
      },
      "info": Object {
        "description": "Button with react PropTypes",
        "displayName": "Button",
        "methods": Array [],
        "props": Object {
          "backgroundColor": Object {
            "defaultValue": "'#fefefe'",
            "description": "Background color",
            "type": Object {
              "name": "string",
              "required": false,
            },
          },
          "children": Object {
            "defaultValue": "'default'",
            "description": "button label",
            "type": Object {
              "name": "string",
              "required": false,
            },
          },
          "color": Object {
            "defaultValue": "'black'",
            "description": "Text color, default black",
            "type": Object {
              "name": "string",
              "required": false,
            },
          },
          "disabled": Object {
            "defaultValue": "false",
            "description": "Boolean indicating whether the button should render as disabled",
            "type": Object {
              "name": "boolean",
            },
          },
          "onClick": Object {
            "defaultValue": "() => {}",
            "description": "onClick handler",
            "type": Object {
              "name": "function",
              "required": false,
            },
          },
          "padding": Object {
            "defaultValue": "5",
            "description": "Numeric  field type",
            "type": Object {
              "name": "number",
              "required": false,
            },
          },
          "style": Object {
            "defaultValue": "{}",
            "description": "Custom styles",
            "type": Object {
              "name": "object",
              "value": Array [],
            },
          },
          "type": Object {
            "defaultValue": "'button'",
            "description": "Button type",
            "type": Object {
              "name": "enum",
              "value": Array [
                Object {
                  "name": "string",
                  "value": "'button'",
                },
                Object {
                  "name": "string",
                  "value": "'reset'",
                },
                Object {
                  "name": "string",
                  "value": "'submit'",
                },
              ],
            },
          },
        },
      },
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 31,
        },
        "start": Object {
          "column": 22,
          "line": 8,
        },
      },
      "name": "Spinner",
      "package": "6b1e448146504b441f181f0e3fc41fc9",
      "request": "/Users/atanasster/component-controls/examples/stories/src/components/PropTypesButton.js",
      "source": "import React from 'react';
import { lighten } from 'polished';
import PropTypes from 'prop-types';

/**
 * Button with react PropTypes
 */
export const Button = ({
  disabled,
  children,
  onClick,
  style,
  backgroundColor,
  color,
  type,
  padding,
}) => (
  <button
    type={type}
    disabled={disabled}
    onClick={onClick}
    style={{
      ...style,
      backgroundColor,
      color: lighten(disabled ? 0.4 : 0, color),
      padding,
    }}
  >
    {children}
  </button>
);

Button.defaultProps = {
  disabled: false,
  children: 'default',
  onClick: () => {},
  style: {},
  backgroundColor: '#fefefe',
  color: 'black',
  type: 'button',
  padding: 5,
};

Button.propTypes = {
  /**
   * Boolean indicating whether the button should render as disabled
   */
  disabled: PropTypes.bool,

  /**
   * button label
   */
  children: PropTypes.string,

  /**
   * onClick handler
   */
  onClick: PropTypes.func,

  /**
   * Custom styles
   */
  style: PropTypes.shape({}),

  /**
   * Background color
   */
  backgroundColor: PropTypes.string,

  /**
   * Text color, default black
   */
  color: PropTypes.string,

  /**
   * Button type
   */
  type: PropTypes.oneOf(['button', 'reset', 'submit']),

  /**
   * Numeric  field type
   */
  padding: PropTypes.number,
};
",
    },
    "b5fffc2a9e710b29374f13f1d7ef028c": Object {
      "from": "../../../../../examples/stories/src/components/Button",
      "importedName": "Button",
      "imports": Object {
        "react": Array [
          Object {
            "importedName": "default",
            "name": "React",
          },
          Object {
            "importedName": "FC",
            "name": "FC",
          },
        ],
      },
      "info": Object {
        "description": "Button with react Typescript properties",
        "displayName": "Button",
        "methods": Array [],
        "props": Object {
          "backgroundColor": Object {
            "defaultValue": "#fefefe",
            "description": "Background color",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "string",
              "raw": "string",
            },
          },
          "children": Object {
            "defaultValue": "default",
            "description": "button label",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "ReactNode",
              "raw": "ReactNode",
            },
          },
          "color": Object {
            "defaultValue": "black",
            "description": "Text color, default black",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "string",
              "raw": "string",
            },
          },
          "disabled": Object {
            "defaultValue": false,
            "description": "Boolean indicating whether the button should render as disabled",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "boolean",
              "raw": "boolean",
            },
          },
          "onClick": Object {
            "defaultValue": "() => {}",
            "description": "onClick handler",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "() => void",
              "raw": "() => void",
            },
          },
          "padding": Object {
            "defaultValue": 5,
            "description": "Numeric  field type",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "number",
              "raw": "number",
            },
          },
          "style": Object {
            "defaultValue": "{}",
            "description": "Custom styles",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "object",
              "raw": "object",
            },
          },
          "type": Object {
            "defaultValue": "button",
            "description": "Button type",
            "parentName": "ButtonProps",
            "type": Object {
              "name": "enum",
              "raw": "\\"button\\" | \\"reset\\" | \\"submit\\"",
              "value": Array [
                Object {
                  "name": "string",
                  "value": "button",
                },
                Object {
                  "name": "string",
                  "value": "reset",
                },
                Object {
                  "name": "string",
                  "value": "submit",
                },
              ],
            },
          },
        },
      },
      "loc": Object {
        "end": Object {
          "column": 1,
          "line": 71,
        },
        "start": Object {
          "column": 39,
          "line": 48,
        },
      },
      "name": "Button",
      "package": "999878322b2acba3a7ca83bc6972a800",
      "request": "/Users/atanasster/component-controls/examples/stories/src/components/Button.tsx",
      "source": "import React, { FC } from 'react';

interface ButtonProps {
  /**
   *  Boolean indicating whether the button should render as disabled
   */
  disabled?: boolean;

  /**
   * button label
   */
  children?: string;

  /**
   * onClick handler
   */
  onClick?: () => void;

  /**
   * Custom styles
   */
  style?: object;

  /**
   * Background color
   */
  backgroundColor?: string;

  /**
   * Text color, default black
   */
  color?: string;

  /**
   * Button type
   */
  type?: 'button' | 'reset' | 'submit';

  /**
   * Numeric  field type
   */
  padding?: number;
}

/**
 * Button with react Typescript properties
 */
export const Button: FC<ButtonProps> = ({
  disabled,
  children,
  onClick,
  style,
  backgroundColor,
  color,
  type,
  padding,
}) => (
  <button
    type={type}
    disabled={disabled}
    onClick={onClick}
    style={{
      ...style,
      backgroundColor,
      color,
      padding,
    }}
  >
    {children}
  </button>
);

Button.defaultProps = {
  disabled: false,
  children: 'default',
  onClick: () => {},
  style: {},
  backgroundColor: '#fefefe',
  color: 'black',
  type: 'button',
  padding: 5,
};
",
    },
  },
  "config": Object {},
  "getDocPage": [Function],
  "getDocPaths": [Function],
  "getDocs": [Function],
  "getHomePage": [Function],
  "getHomePaths": [Function],
  "getIndexPage": [Function],
  "getUniquesByField": [Function],
  "packages": Object {
    "411a6b6f22151d62603115530afde73f": Object {
      "dependencies": Object {
        "@component-controls/loader": "^1.8.0",
        "@component-controls/webpack-configs": "^1.8.0",
        "chalk": "^4.0.0",
        "memory-fs": "^0.5.0",
        "typescript": "^3.8.3",
        "webpack": "^4.43.0",
      },
      "devDependencies": Object {
        "@component-controls/ts-markdown-docs": "^1.5.0",
        "@types/jest": "^25.1.2",
        "@types/memory-fs": "^0.3.2",
        "cross-env": "^5.2.1",
        "eslint": "^6.5.1",
        "jest": "^24.9.0",
        "webpack-bundle-analyzer": "^3.7.0",
      },
      "fileHash": "411a6b6f22151d62603115530afde73f",
      "name": "@component-controls/webpack-compile",
      "peerDependencies": undefined,
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/core/webpack-compile/tests/fixtures/subcomponents/esm.stories.tsx",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "1.8.0",
    },
    "6b1e448146504b441f181f0e3fc41fc9": Object {
      "dependencies": undefined,
      "devDependencies": undefined,
      "fileHash": "6b1e448146504b441f181f0e3fc41fc9",
      "name": "component-controls-stories",
      "peerDependencies": undefined,
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/examples/stories/src/components/PropTypesButton.js",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "1.8.0",
    },
    "999878322b2acba3a7ca83bc6972a800": Object {
      "dependencies": undefined,
      "devDependencies": undefined,
      "fileHash": "999878322b2acba3a7ca83bc6972a800",
      "name": "component-controls-stories",
      "peerDependencies": undefined,
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/examples/stories/src/components/Button.tsx",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "1.8.0",
    },
    "a3c604b46a9a60e6152bda8549a7f0e8": Object {
      "dependencies": Object {
        "@component-controls/loader": "^1.8.0",
        "@component-controls/webpack-configs": "^1.8.0",
        "chalk": "^4.0.0",
        "memory-fs": "^0.5.0",
        "typescript": "^3.8.3",
        "webpack": "^4.43.0",
      },
      "devDependencies": Object {
        "@component-controls/ts-markdown-docs": "^1.5.0",
        "@types/jest": "^25.1.2",
        "@types/memory-fs": "^0.3.2",
        "cross-env": "^5.2.1",
        "eslint": "^6.5.1",
        "jest": "^24.9.0",
        "webpack-bundle-analyzer": "^3.7.0",
      },
      "fileHash": "a3c604b46a9a60e6152bda8549a7f0e8",
      "name": "@component-controls/webpack-compile",
      "peerDependencies": undefined,
      "repository": Object {
        "browse": "https://github.com/ccontrols/component-controls/tree/master/core/webpack-compile/tests/fixtures/subcomponents/mdx.stories.mdx",
        "docs": "https://github.com/ccontrols/component-controls/tree/master#readme",
        "issues": "https://github.com/ccontrols/component-controls/issues",
      },
      "version": "1.8.0",
    },
  },
  "stores": Array [
    Object {
      "doc": Object {
        "components": Object {},
        "componentsLookup": Object {
          "Button": "b5fffc2a9e710b29374f13f1d7ef028c",
          "Spinner": "08a97b28475aff9eba8252eeffddeea5",
        },
        "date": 2020-07-13T13:59:46.722Z,
        "dateModified": 2020-07-13T13:59:46.724Z,
        "fileName": "/Users/atanasster/component-controls/core/webpack-compile/tests/fixtures/subcomponents/esm.stories.tsx",
        "package": "411a6b6f22151d62603115530afde73f",
        "title": "Library/Components/Button",
      },
      "filePath": "/Users/atanasster/component-controls/core/webpack-compile/tests/fixtures/subcomponents/esm.stories.tsx",
      "stories": Object {
        "overview": Object {
          "arguments": Array [],
          "component": "Button",
          "id": "overview",
          "loc": Object {
            "end": Object {
              "column": 55,
              "line": 9,
            },
            "start": Object {
              "column": 24,
              "line": 9,
            },
          },
          "name": "overview",
          "source": "() => <Button>click me</Button>",
          "subcomponents": Object {
            "Custom tab": "Spinner",
          },
        },
      },
    },
    Object {
      "doc": Object {
        "componentsLookup": Object {
          "Button": "b5fffc2a9e710b29374f13f1d7ef028c",
          "Spinner": "08a97b28475aff9eba8252eeffddeea5",
        },
        "date": 2020-07-13T13:59:53.358Z,
        "dateModified": 2020-07-16T20:43:10.375Z,
        "fileName": "/Users/atanasster/component-controls/core/webpack-compile/tests/fixtures/subcomponents/mdx.stories.mdx",
        "package": "a3c604b46a9a60e6152bda8549a7f0e8",
        "title": "Library/Components/Spinner",
      },
      "filePath": "/Users/atanasster/component-controls/core/webpack-compile/tests/fixtures/subcomponents/mdx.stories.mdx",
      "stories": Object {
        "overview": Object {
          "component": "Button",
          "id": "overview",
          "loc": Object {
            "end": Object {
              "column": 6,
              "line": 31,
            },
            "start": Object {
              "column": 7,
              "line": 29,
            },
          },
          "name": "overview",
          "source": "<Button>click me</Button>",
          "subcomponents": Object {
            "Custom tab": "Spinner",
          },
        },
      },
    },
  ],
}
`;
